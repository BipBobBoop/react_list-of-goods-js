{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_ALPHABETICALLY","SORT_BY_LENGTH","App","useState","sortType","setSortType","reverse","setReverse","visibleGoods","useMemo","goods","preparedGoods","sort","good1","good2","localeCompare","length","getPreparedGoods","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"4OAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,WACtBC,EAAiB,SAwBhB,IAAMC,EAAM,WACjB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,mBAzBX,OAyBnB,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EAAeC,mBAAQ,kBAxB/B,SAA0BC,EAA1B,GAAyD,IAAtBN,EAAqB,EAArBA,SAAUE,EAAW,EAAXA,QACrCK,EAAa,UAAOZ,GAiB1B,OAfIK,GACFO,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQV,GACN,KAAKJ,EACH,OAAOa,EAAME,cAAcD,GAE7B,KAAKb,EACH,OAAOY,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKRV,EAAUK,EAAcL,UAAYK,EAMRM,CACjClB,EAAiB,CAAEK,WAAUE,cAC5B,CACDP,EACAK,EACAE,IAQF,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,SAAU,UAAW,CACzC,WAAYhB,IAAaJ,IAE3BqB,QAAS,kBAAMhB,EAAYL,IAL7B,iCAUA,wBACEmB,KAAK,SACLD,UAAWE,IAAW,SAAU,aAAc,CAC5C,WAAYhB,IAAaH,IAE3BoB,QAAS,kBAAMhB,EAAYJ,IAL7B,4BAUA,wBACEkB,KAAK,SACLD,UAAWE,IAAW,SAAU,aAAc,CAC5C,YAAad,IAEfe,QAAS,kBAAMd,GAAYD,IAL7B,sBAUGF,IAAaE,GACd,wBACEa,KAAK,SACLD,UAAU,4BACVG,QA1CU,WAClBhB,EAAY,IACZE,EApCiB,QAyEX,sBAUJ,6BACGC,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YCtGnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e2817287.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport classNames from 'classnames';\nimport './App.scss';\nimport { useState, useMemo } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_ALPHABETICALLY = 'Alphabet';\nconst SORT_BY_LENGTH = 'Length';\nconst SORT_REVERSE = false;\n\nfunction getPreparedGoods(goods, { sortType, reverse }) {\n  const preparedGoods = [...goodsFromServer];\n\n  if (sortType) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortType) {\n        case SORT_ALPHABETICALLY:\n          return good1.localeCompare(good2);\n\n        case SORT_BY_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return reverse ? preparedGoods.reverse() : preparedGoods;\n}\n\nexport const App = () => {\n  const [sortType, setSortType] = useState('');\n  const [reverse, setReverse] = useState(SORT_REVERSE);\n  const visibleGoods = useMemo(() => getPreparedGoods(\n    goodsFromServer, { sortType, reverse },\n  ), [\n    goodsFromServer,\n    sortType,\n    reverse,\n  ]);\n\n  const handleReset = () => {\n    setSortType('');\n    setReverse(SORT_REVERSE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-info', {\n            'is-light': sortType !== SORT_ALPHABETICALLY,\n          })}\n          onClick={() => setSortType(SORT_ALPHABETICALLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-success', {\n            'is-light': sortType !== SORT_BY_LENGTH,\n          })}\n          onClick={() => setSortType(SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-warning', {\n            'is-light': !reverse,\n          })}\n          onClick={() => setReverse(!reverse)}\n        >\n          Reverse\n        </button>\n\n        {(!sortType && !reverse) || (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}