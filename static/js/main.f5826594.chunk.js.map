{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_ALPHABETICALLY","SORT_BY_LENGTH","App","useState","sortType","setSortType","reverse","setReverse","visibleGoods","goods","preparedGoods","sort","good1","good2","localeCompare","length","getPreparedGoods","isAlphabetSorted","isLengthSorted","isOriginalOrder","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"yNAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,WACtBC,EAAiB,SAsBhB,IAAMC,EAAM,WACjB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,mBAvBX,OAuBnB,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EAtBR,SAA0BC,EAA1B,GAAyD,IAAtBL,EAAqB,EAArBA,SAAUE,EAAW,EAAXA,QACrCI,EAAa,UAAOX,GAe1B,OAbIK,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAC7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAKRT,EAAUI,EAAcJ,UAAYI,EAMtBM,CAAiBjB,EAAiB,CAAEK,WAAUE,YAC7DW,EAAmBb,IAAaJ,EAChCkB,EAAiBd,IAAaH,EAC9BkB,GAAmBf,IAAaE,EAEtC,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,iBAAYH,EAAmB,UAAY,oBACpDK,QAAS,kBAAMjB,EAAYL,IAH7B,iCAQA,wBACEqB,KAAK,SACLD,UAAS,iBAAYF,EAAiB,aAAe,uBACrDI,QAAS,kBAAMjB,EAAYJ,IAH7B,4BAQA,wBACEoB,KAAK,SACLD,UAAS,iBAAYd,EAAU,aAAe,uBAC9CgB,QAAS,kBAAMf,GAAYD,IAH7B,qBAQCa,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVE,QAAS,WACPf,EA7DO,OA8DPF,EAAY,KALhB,sBAaJ,6BACGG,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YCxFnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f5826594.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_ALPHABETICALLY = 'Alphabet';\nconst SORT_BY_LENGTH = 'Length';\nconst SORT_REVERSE = false;\n\nfunction getPreparedGoods(goods, { sortType, reverse }) {\n  const preparedGoods = [...goodsFromServer];\n\n  if (sortType) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortType) {\n        case SORT_ALPHABETICALLY:\n          return good1.localeCompare(good2);\n        case SORT_BY_LENGTH:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return reverse ? preparedGoods.reverse() : preparedGoods;\n}\n\nexport const App = () => {\n  const [sortType, setSortType] = useState('');\n  const [reverse, setReverse] = useState(SORT_REVERSE);\n  const visibleGoods = getPreparedGoods(goodsFromServer, { sortType, reverse });\n  const isAlphabetSorted = sortType === SORT_ALPHABETICALLY;\n  const isLengthSorted = sortType === SORT_BY_LENGTH;\n  const isOriginalOrder = !sortType && !reverse;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button ${isAlphabetSorted ? 'is-info' : 'is-info is-light'}`}\n          onClick={() => setSortType(SORT_ALPHABETICALLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button ${isLengthSorted ? 'is-success' : 'is-success is-light'}`}\n          onClick={() => setSortType(SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button ${reverse ? 'is-warning' : 'is-warning is-light'}`}\n          onClick={() => setReverse(!reverse)}\n        >\n          Reverse\n        </button>\n\n        {isOriginalOrder || (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setReverse(SORT_REVERSE);\n              setSortType('');\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li key={good} data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}